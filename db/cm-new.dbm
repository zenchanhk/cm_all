<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.0-alpha1" last-position="0,0" last-zoom="1"
	 default-schema="public" default-owner="postgres">
<role name="cmall"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<role name="doctor"
      superuser="true"
      createdb="true"
      createrole="true"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<database name="cm_all" encoding="UTF8" lc-collate="en_US.UTF-8" lc-ctype="en_US.UTF-8">
	<role name="postgres"/>
	<tablespace name="pg_default"/>
</database>

<schema name="public" rect-visible="true" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<sequence name="app_user_user_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="app_user">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="60"/>
	<column name="user_id" not-null="true" sequence="public.app_user_user_id_seq">
		<type name="integer" length="0"/>
	</column>
	<column name="details" not-null="true">
		<type name="jsonb" length="0"/>
	</column>
	<column name="avatar">
		<type name="bytea" length="0"/>
	</column>
	<column name="last_upd_usr" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="last_upd_ts" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<constraint name="appuser_pk" type="pk-constr" table="public.app_user">
		<columns names="user_id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="patient_img_img_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="patient_img">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="420" y="60"/>
	<column name="img_id" not-null="true" sequence="public.patient_img_img_id_seq">
		<type name="integer" length="0"/>
	</column>
	<column name="thumbnail" not-null="true">
		<type name="bytea" length="0"/>
	</column>
	<column name="img_path" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="visit_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="dirty" not-null="true" default-value="false">
		<type name="boolean" length="0"/>
	</column>
	<column name="last_upd_ts" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<column name="last_upd_usr" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="patientimg_pk" type="pk-constr" table="public.patient_img">
		<columns names="img_id" ref-type="src-columns"/>
	</constraint>
</table>

<function name="img_path"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="sql" sql-disabled="true"/>
	<return-type>
	<type name="text" length="1"/>
	</return-type>
	<definition><![CDATA[
SELECT text 'XXX';
]]></definition>
</function>

<sequence name="visit_visit_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="visit">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="60" y="220"/>
	<column name="visit_id" not-null="true" sequence="public.visit_visit_id_seq">
		<type name="integer" length="0"/>
	</column>
	<column name="case_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="patient_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="doctor_id" not-null="true">
		<type name="integer" length="0"/>
	</column>
	<column name="symptoms">
		<type name="text" length="0"/>
	</column>
	<column name="pulse" not-null="true">
		<type name="jsonb" length="0"/>
	</column>
	<column name="diagnosis">
		<type name="text" length="0"/>
	</column>
	<column name="prescription">
		<type name="text" length="0"/>
	</column>
	<column name="acupuncture">
		<type name="text" length="0"/>
	</column>
	<column name="visisbility" not-null="true">
		<type name="smallint" length="0" dimension="1"/>
	</column>
	<column name="ts" not-null="true" default-value="0">
		<type name="smallint" length="0"/>
		<comment><![CDATA[increase when being updated]]></comment>
	</column>
	<column name="dirty" not-null="true" default-value="false">
		<type name="boolean" length="0"/>
	</column>
	<column name="last_upd_usr" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="last_upd_ts" not-null="true" default-value="now()">
		<type name="timestamp with time zone" length="0" with-timezone="true"/>
	</column>
	<constraint name="visit_pk" type="pk-constr" table="public.visit">
		<columns names="visit_id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="sync_op">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[SQL statements for sync]]></comment>
	<position x="560" y="260"/>
	<column name="sync_type" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="sql" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="syncop_pk" type="pk-constr" table="public.sync_op">
		<columns names="sync_type" ref-type="src-columns"/>
	</constraint>
</table>

<function name="trig_b_del"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Delete action will cause dirty set to false]]></comment>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[
DECLARE
tbl  text = TG_ARGV[0];  	--TABLE NAME
pk   text = TG_ARGV[1];  	--PRIMARY KEY
dirty bool = false;
last_up_ts timestamptz;
day_diff integer;	
BEGIN
	IF (TG_OP = 'DELETE') THEN   
		execute format('select dirty, last_upd_ts from $1') 
		using OLD into dirty, last_upd_ts;
		day_idff = date_part('year',age(last_upd_ts))*365 +
				date_part('month',age(last_upd_ts))*30
				date_part('day',age(last_upd_ts));
		IF (dirty = false) THEN
	    	execute format('update %s set dirty = true WHERE %s=$1.%s',tbl,pk,pk) using OLD;   
			RETURN NULL;
	   	ELSIF day_diff > keep_period() THEN		
			RETURN OLD;
		ELSE
			RETURN NULL;
		END IF;
	ELSE
		RAISE EXCEPTION 'This trigger function is only used with Delete action.';
	END IF;	
END;
]]></definition>
</function>

<trigger name="visit_incr_ts" firing-type="AFTER" per-line="false" constraint="false"
	 ins-event="false" del-event="false" upd-event="true" trunc-event="false"
	 table="public.visit">
		<function signature="public.trig_b_del()"/>
</trigger>

<function name="trig_encode_img"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Encode binary data to base64 string to store in text column]]></comment>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[
Begin
    NEW.thumbnail = encode(NEW.thumbnail, 'base64');
    RETURN NEW;
end;
]]></definition>
</function>

<trigger name="encode_img" firing-type="BEFORE" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="true" trunc-event="false"
	 table="public.patient_img">
		<function signature="public.trig_encode_img()"/>
</trigger>

<function name="trig_b_upd_sys"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Increase Ts by 1 whenever update; and last update times]]></comment>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger" length="1"/>
	</return-type>
	<definition><![CDATA[
begin
	new.ts = new.ts + 1;
	new.last_upd_ts = now();
	return new;
end;
]]></definition>
</function>

<function name="keep_period"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Return the days of deleted record will be kept]]></comment>
	<language name="sql" sql-disabled="true"/>
	<return-type>
	<type name="smallint" length="1"/>
	</return-type>
	<definition><![CDATA[
select 60::smallint
]]></definition>
</function>

<language name="plpythonu" trusted="false">
	<role name="postgres"/>
</language>

<function name="drop_file"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="doctor"/>
	<language name="plpythonu"/>
	<return-type>
	<type name="boolean" length="1"/>
	</return-type>
	<definition><![CDATA[import os
import shutil

if os.path.isfile(path):
   os.remove(path)  
elif os.path.isdir(path):
   shutil.rmtree(path) 
]]></definition>
</function>

<constraint name="patientimg_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.visit" table="public.patient_img">
	<columns names="visit_id" ref-type="src-columns"/>
	<columns names="visit_id" ref-type="dst-columns"/>
</constraint>

<constraint name="visit_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="NO ACTION" ref-table="public.app_user" table="public.visit">
	<columns names="doctor_id" ref-type="src-columns"/>
	<columns names="user_id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_patient_img_visit" type="relfk"
	 custom-color="#83af1f"
	 src-table="public.patient_img"
	 dst-table="public.visit"
	 src-required="false" dst-required="false"/>

<relationship name="rel_visit_app_user" type="relfk"
	 custom-color="#5aa578"
	 src-table="public.visit"
	 dst-table="public.app_user"
	 src-required="false" dst-required="false"/>

</dbmodel>
